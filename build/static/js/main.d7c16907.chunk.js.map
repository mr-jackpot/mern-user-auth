{"version":3,"sources":["server/props.js","logo.svg","components/Login.js","pages/LoginRedirect/LoginRedirect.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","DB_USER","DB_PASSWORD","DB_CLUSTER","LOGIN_DB","SESSION_DB","SERVER_PORT","SERVER_URL","SERVER_NAME","REACT_PORT","REACT_URL","SESSION_SECRET","require","randomBytes","toString","env","Login","React","useState","username","setUsername","password","setPassword","login","submitLogin","auth","axios","post","withCredentials","then","x","console","log","onClick","get","onSubmit","e","preventDefault","value","onChange","u","target","name","required","p","type","window","location","reload","LoginRedirect","history","useHistory","push","App","exact","path","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAAA,EAAOC,QAAU,CACfC,QAAS,cACTC,YAAa,mBACbC,WAAY,kCACZC,SAAU,gBACVC,WAAY,gBAEZC,YAAa,KACbC,WAAY,kDACZC,YAAa,cAEbC,WAAY,IACZC,UAAW,kDAEXC,eAAgBC,EAAQ,KAAUC,YAAY,IAAIC,SAAS,S,sWCd9C,G,OAAA,IAA0B,kC,kDCInCC,EAAMH,EAAQ,KAmFLI,EAhFD,WAGV,MAAgCC,IAAMC,SAAS,IAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCH,IAAMC,SAAS,IAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,CACV,SAAYJ,EACZ,SAAYE,GAQVG,EAAc,SAACC,GACjBC,IACKC,KADL,UACaZ,EAAIR,YADjB,OAC8BQ,EAAIT,YADlC,SACsDmB,EAAM,CAACG,iBAAiB,IACzEC,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,sCAiCxB,OACI,gCACI,wBAAQC,QArBE,SAACR,GACfC,IACKQ,IADL,UACYnB,EAAIR,YADhB,OAC6BQ,EAAIT,YADjC,UACsD,CAACsB,iBAAiB,IACnEC,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,+BAgBhB,0BACA,wBAAQC,QAhCC,SAACR,GACdC,IACKQ,IADL,UACYnB,EAAIR,YADhB,OAC6BQ,EAAIT,YADjC,aACyD,CAACsB,iBAAiB,IACtEC,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,+BA2BhB,2BACA,uBAAMG,SA/CO,SAACC,GAClBA,EAAEC,iBACFb,EAAYD,IA6CR,UACI,8CAAwB,uBACxB,uBACIe,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAAYoB,EAAEC,OAAOH,QACtCI,KAAK,WACLC,UAAQ,IACV,uBACF,8CAAwB,uBACxB,uBACIL,MAAOjB,EACPkB,SAAU,SAACK,GAAD,OAAOtB,EAAYsB,EAAEH,OAAOH,QACtCO,KAAK,WACLF,UAAQ,IACV,uBACF,uBAAOE,KAAK,SAASP,MAAM,cAE/B,wBAAQL,QA9BD,SAACR,GACZC,IACKQ,IADL,UACYnB,EAAIR,YADhB,OAC6BQ,EAAIT,YADjC,WACuD,CAACsB,iBAAiB,IACpEC,MAAK,SAACC,GACHC,QAAQC,IAAIF,MAEpBgB,OAAOC,SAASC,UAwBZ,kC,eC7DGC,EAjBO,WAElB,IAAIC,EAAUC,cAMd,OACI,gCACI,iEACA,uBACA,uBAAON,KAAK,SAASP,MAAM,UAAUL,QARzB,WAChBiB,EAAQE,KAAK,YCuBNC,MAzBf,WAGE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,kEAGA,cAAC,EAAD,WAIN,cAAC,IAAD,CAAOJ,KAAK,WAAZ,SACE,cAAC,EAAD,YCbKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7c16907.chunk.js","sourcesContent":["module.exports = {\n  DB_USER: \"mongo_owner\",\n  DB_PASSWORD: \"h9iXvyO5z84Mvtpa\",\n  DB_CLUSTER: \"mongo-backend.swf3y.mongodb.net\",\n  LOGIN_DB: \"auth_database\",\n  SESSION_DB: \"session_store\",\n\n  SERVER_PORT: 8080,\n  SERVER_URL: \"https://fircohard-open-source.nw.r.appspot.com:\",\n  SERVER_NAME: \"[server.js]\",\n\n  REACT_PORT: 3000,\n  REACT_URL: \"https://fircohard-open-source.nw.r.appspot.com:\",\n\n  SESSION_SECRET: require(\"crypto\").randomBytes(16).toString('hex'),\n};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport axios from 'axios';\nimport \"./Login.css\"\n\nconst env = require(\"../server/props\");\n\n\nconst Login = () => {\n    \n    // This can be one object\n    const [username, setUsername] = React.useState(\"\")\n    const [password, setPassword] = React.useState(\"\")\n\n    const login = {\n        \"username\": username,\n        \"password\": password \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        submitLogin(login);\n    }\n\n    const submitLogin = (auth) => {\n        axios\n            .post(`${env.SERVER_URL}${env.SERVER_PORT}/auth`, auth, {withCredentials: true})\n            .then((x) => {\n                console.log(x);\n                console.log('Routing to /session from React')\n            })\n    }\n\n    const userTest = (auth) => {\n        axios\n            .get(`${env.SERVER_URL}${env.SERVER_PORT}/authtest`, {withCredentials: true})\n            .then((x) => {\n                console.log(x);\n                console.log('were routed to authtest')\n            })\n\n    }\n\n    const adminTest = (auth) => {\n        axios\n            .get(`${env.SERVER_URL}${env.SERVER_PORT}/admin`, {withCredentials: true})\n            .then((x) => {\n                console.log(x);\n                console.log('were routed to authtest')\n            })\n\n    }\n    \n    const logout = (auth) => {\n        axios\n            .get(`${env.SERVER_URL}${env.SERVER_PORT}/logout`, {withCredentials: true})\n            .then((x) => {\n                console.log(x);\n            })\n        window.location.reload();\n    }\n\n    return (\n        <div>\n            <button onClick={adminTest}> OWNER TEST </button>\n            <button onClick={userTest}> VIEWER TEST </button>\n            <form onSubmit={handleSubmit}>\n                <label>Username:</label><br/>\n                <input\n                    value={username}\n                    onChange={(u) => setUsername(u.target.value)}\n                    name=\"username\" // added so cypress can find the inputbox\n                    required\n                /><br/>\n                <label>Password:</label><br/>\n                <input\n                    value={password}\n                    onChange={(p) => setPassword(p.target.value)}\n                    type=\"password\"\n                    required\n                /><br/>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form> \n            <button onClick={logout}> DESTROY COOKIE </button>\n        </div>\n    )\n}\n\nexport default Login","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst LoginRedirect = () => {\n\n    let history = useHistory();\n    \n    const handleRoute = () =>{ \n        history.push(\"/\");\n      }\n\n    return (\n        <div>\n            <h1>Success! You are now logged in.</h1>\n            <br/>\n            <input type=\"submit\" value=\"Go Back\" onClick={handleRoute}/>\n        </div>\n    )\n}\n\nexport default LoginRedirect;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login'\nimport {Switch, Route, BrowserRouter} from 'react-router-dom';\nimport LoginRedirect from './pages/LoginRedirect/LoginRedirect';\n\nfunction App() {\n  \n  \n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Enter your username and password.\n              </p>\n              <Login />\n            </header>\n          </div>\n        </Route>\n        <Route path=\"/session\">\n          <LoginRedirect />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}